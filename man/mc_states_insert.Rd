% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/states.R
\name{mc_states_insert}
\alias{mc_states_insert}
\title{Insert states of sensors}
\usage{
mc_states_insert(data, states_table)
}
\arguments{
\item{data}{cleaned myClim object see \link{myClim-package}}

\item{states_table}{data.frame with columns:
\itemize{
\item locality_id
\item logger_index - index of logger in locality
\item sensor_name - original sensor id if not modified, if renamed then new name (e.g.,"GDD5", "HOBO_T_mean" ,"TMS_T1_max", "my_sensor01")
\item tag - category of state
\item start - start datetime
\item end - end datetime
\item value - value of state
}

As input can be used result of \code{\link[=mc_info_states]{mc_info_states()}}. The sensor_name and value columns are optional.
When sensor_name is NA, states are inserted to all sensors.}
}
\value{
myClim object in the same format as input, with inserted sensor states
}
\description{
This function insert new states to sensor see \link{myClim-package}

The date times start and end are cropped by logger/locality datetime range and are rounded by step.
}
\examples{
states <- data.frame(locality_id="A1E05", logger_index=1, sensor_name="Thermo_T", tag="error",
                     start=lubridate::ymd_hm("2020-10-28 9:00"),
                     end=lubridate::ymd_hm("2020-10-28 9:30"))
data <- mc_states_insert(mc_data_example_clean, states)
}
