% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/states.R
\name{mc_states_outlier}
\alias{mc_states_outlier}
\title{Create states for outlying values}
\usage{
mc_states_outlier(
  data,
  table,
  period = NULL,
  range_tag = "range",
  jump_tag = "jump"
)
}
\arguments{
\item{data}{myClim object see \link{myClim-package}}

\item{table}{The table with extreme values. Table is in the same format as output of \code{\link[=mc_info_range]{mc_info_range()}}.
The columns of the table are:
\itemize{
\item sensor_name - name of sensor (e.g., TMS_T1, TMS_moist, HOBO_T) see \link{mc_data_sensors}
\item min_value - minimal value
\item max_value - maximal value
\item positive_jump - Maximal difference between two consecutive values. Next value is higher than previous.
\item negative_jump - Maximal difference between two consecutive values. Next value is lower than previous.
}}

\item{period}{period for standardize value of jump. If NULL then the difference is not standardized. (default NULL)

It is character usable for \link[lubridate:period]{lubridate::period}. For example "1 hour", "30 minutes", "2 days".}

\item{range_tag}{The tag for the states which implies that the value is out of range. (default "range")}

\item{jump_tag}{The tag for the states which implies that the difference between two consecutive values is too high. (default "jump")}
}
\value{
Returns a myClim object in the same format as the input, with added states.
}
\description{
Create states for outlying values
}
\examples{
range_table <- mc_info_range(mc_data_example_clean)
range_table$negative_jump[range_table$sensor_name == "TMS_moist"] <- 500
data <- mc_states_outlier(mc_data_example_clean, range_table)
}
